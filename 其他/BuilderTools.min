
function Process(name){this.value=0;this.change=(v)=>{this.value=v;if(this.value>=1)this._consoleType="log";BT.consoleManger.update()}this.add=(v)=>{this.change(this.value+v)}this._getText=(v)=>{return`${name}...${this.value<1?`${Math.floor(this.value*100)}%`:"完成"}`}this.done=()=>{this.change(1)}this._consoleType="warn"}function Label(text,type="log"){this._getText=()=>text;this._consoleType=type}let BT={async requestAuth(reqester,message,callback=()=>{}){let r=await(this.owner.player.dialog({type:"select",options:["允许","拒绝"],content:message,title:"权限申请"}));if(r&&r.index===0){callback()}else{reqester.player.dialog({type:"text",title:"权限请求失败",content:"权限申请被驳回"})}},async selectPositionPoint(entity,message="选择位置"){while(true){let r=await(entity.player.dialog({type:"select",content:message,options:entity.player.points.map(v=>`X:${v.x}Y:${v.y}Z:${v.z}`)}));if(r)return entity.player.points[r.index]}},async selectBlock(entity,message="选择方块"){let error=false;while(true){let r=await(entity.player.dialog({type:"input",content:message+(error?"\n输入的方块名称无效":"")}));if(r&&voxels.VoxelTypes.includes(r)){return r}error=true}},setup(ownerIndex){this.owner=world.querySelectorAll("player")[ownerIndex];this.consoleManger.setup();this.consoleManger.addObject(new Label("Builder Tools Started!\n--- by Alan_Best v0.1\n提示: 下蹲即可打开功能选择器"));const functions=[{name:"填充矩形",async use(entity){let p1=await BT.selectPositionPoint(entity,"选择第一点");let p2=await BT.selectPositionPoint(entity,"选择对角线上另一点");let min=new Box3Vector3(p1.x<p2.x?p1.x:p2.x,p1.y<p2.y?p1.y:p2.y,p1.z<p2.z?p1.z:p2.z)let max=new Box3Vector3(p1.x>p2.x?p1.x:p2.x,p1.y>p2.y?p1.y:p2.y,p1.z>p2.z?p1.z:p2.z)let blocksCount=Math.floor((max.x-min.x)*(max.y-min.y)*(max.z-min.z));let block=await BT.selectBlock(entity,"选择填充用的方块名称");BT.requestAuth(entity,`${entity.player.name}请求用${block}填充从${min}到${max}的矩形\n(共计${blocksCount}个方块)`,async()=>{let proc=new Process(`${entity.player.name}的填充任务`)let a=blocksCount/100;let c=0;BT.consoleManger.addObject(proc);for(let x=min.x;x<=max.x;x++){for(let y=min.y;y<=max.y;y++){for(let z=min.z;z<=max.z;z++){voxels.setVoxel(x,y,z,block);c+=1}}proc.add(c/blocksCount)await world.nextTick()}proc.done()})}},{name:"设置位置点",async use(entity){let footPosition=entity.position.clone();const r=await(entity.player.dialog({type:"select",options:[`角色位置(${footPosition.x},${footPosition.y},)${footPosition.z},`,"手动输入坐标"],content:"设置位置点"}));if(r){if(r.index===0){entity.player.points.push(footPosition)}else{let r2=await(entity.player.dialog({type:"input",content:"手动输入(格式: x,y,z)"}));if(r2){entity.player.points.push(new Box3Vector3(r2.split(",")[0],r2.split(",")[1],r2.split(",")[2]))}}}}},{name:"清空位置点",use(entity){entity.player.points=[]}}]world.onPress(async({entity,button})=>{if(button!==Box3ButtonType.CROUCH)return;if(!entity.player.points){entity.player.points=[]}const r=await(entity.player.dialog({type:"select",options:functions.map(v=>v.name)}));if(r){functions[r.index].use(entity)}else return})},consoleManger:{_objects:[],addObject(obj){this._objects.push(obj);this.update()},update(){this.needUpdate=true},setup(){world.onTick(()=>{if(this.needUpdate){this.needUpdate=false;console.clear();this._objects.forEach(e=>{console[e._consoleType](e._getText())})}})}}}global.BT=BT;

/**
* 使用方法:
* 复制到控制台, 然后输入 BT.setup(管理员在玩家列表的位置-1)
* 然后任何成员都可以按Shift或C使用此工具
*/
